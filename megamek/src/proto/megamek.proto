syntax = "proto3";

package MegaMegProto;

option java_multiple_files = true;
option java_package = "megamek.common.net.proto";
option java_outer_classname = "MegaMekProto";

enum PacketType {
    UNKNOWN = 0;
    CLOSE_CONNECTION = 1;
    SERVER_VERSION_CHECK = 2;
    SERVER_GREETING = 3;
    ILLEGAL_CLIENT_VERSION = 4;
    CLIENT_NAME = 5;
    CLIENT_VERSIONS = 6;
    LOCAL_PN = 7;
    PLAYER_ADD = 8;
    PLAYER_REMOVE = 9;
    PLAYER_UPDATE = 10;
    PLAYER_TEAM_CHANGE = 11;
    SERVER_PRINCESS_SETTINGS = 12;
    CLIENT_PRINCESS_SETTINGS = 13;
    SERVER_PLAYER_READY = 14;
    CLIENT_PLAYER_READY = 15;
    CHAT = 16;
    ENTITY_ADD = 17;
    ENTITY_REMOVE = 18;
    ENTITY_MOVE = 19;
    ENTITY_DEPLOY = 20;
    ENTITY_DEPLOY_UNLOAD = 21;
    SERVER_ENTITY_ATTACK = 22;
    CLIENT_ENTITY_ATTACK = 23;
    ENTITY_PREPHASE = 24;
    ENTITY_GTA_HEX_SELECT = 25;
    CLIENT_ENTITY_UPDATE = 26;
    SERVER_ENTITY_UPDATE = 27;
    ENTITY_MULTIUPDATE = 28;
    ENTITY_WORDER_UPDATE = 29;
    ENTITY_ASSIGN = 30;
    ENTITY_MODECHANGE = 31;
    ENTITY_AMMOCHANGE = 32;
    ENTITY_SENSORCHANGE = 33;
    ENTITY_SINKSCHANGE = 34;
    ENTITY_ACTIVATE_HIDDEN = 35;
    ENTITY_SYSTEMMODECHANGE = 36;
    FORCE_UPDATE = 37;
    FORCE_ADD = 38;
    FORCE_DELETE = 39;
    FORCE_PARENT = 40;
    FORCE_ADD_ENTITY = 41;
    FORCE_ASSIGN_FULL = 42;
    ENTITY_VISIBILITY_INDICATOR = 43;
    ADD_SMOKE_CLOUD = 44;
    CHANGE_HEX = 45;
    CHANGE_HEXES = 46;
    BLDG_ADD = 47;
    BLDG_REMOVE = 48;
    BLDG_UPDATE = 49;
    BLDG_COLLAPSE = 50;
    BLDG_EXPLODE = 51;
    PHASE_CHANGE = 52;
    TURN = 53;
    ROUND_UPDATE = 54;
    SENDING_BOARD = 55;
    SENDING_ILLUM_HEXES = 56;
    CLEAR_ILLUM_HEXES = 57;
    SENDING_ENTITIES = 58;
    SENDING_PLAYERS = 59;
    SENDING_TURNS = 60;
    SENDING_REPORTS = 61;
    SENDING_REPORTS_SPECIAL = 62;
    SENDING_REPORTS_TACTICAL_GENIUS = 63;
    SENDING_REPORTS_ALL = 64;
    SENDING_GAME_SETTINGS_CLIENT = 65;
    SENDING_GAME_SETTINGS_SERVER = 66;
    SENDING_MAP_DIMENSIONS = 67;
    SENDING_MAP_SETTINGS = 68;
    END_OF_GAME = 69;
    DEPLOY_MINEFIELDS = 70;
    REVEAL_MINEFIELD = 71;
    REMOVE_MINEFIELD = 72;
    SENDING_MINEFIELDS = 73;
    UPDATE_MINEFIELDS = 74;
    REROLL_INITIATIVE = 75;
    UNLOAD_STRANDED = 76;
    SET_ARTILLERY_AUTOHIT_HEXES = 77;
    SENDING_ARTILLERY_ATTACKS = 78;
    SENDING_FLARES = 79;
    SERVER_CORRECT_NAME = 80;
    SEND_SAVEGAME = 81;
    LOAD_SAVEGAME = 82;
    LOAD_GAME = 83;
    SENDING_SPECIAL_HEX_DISPLAY = 84;
    SPECIAL_HEX_DISPLAY_APPEND = 85;
    SPECIAL_HEX_DISPLAY_DELETE = 86;
    CUSTOM_INITIATIVE = 87;
    FORWARD_INITIATIVE = 88;
    SENDING_PLANETARY_CONDITIONS = 89;
    SQUADRON_ADD = 90;
    ENTITY_CALLEDSHOTCHANGE = 91;
    ENTITY_MOUNTED_FACING_CHANGE = 92;
    SENDING_AVAILABLE_MAP_SIZES = 93;
    ENTITY_LOAD = 94;
    ENTITY_NOVA_NETWORK_CHANGE = 95;
    RESET_ROUND_DEPLOYMENT = 96;
    SENDING_TAG_INFO = 97;
    RESET_TAG_INFO = 98;
    CLIENT_FEEDBACK_REQUEST = 99;
    CLIENT_FEEDBACK_RESPONSE = 100;
    GAME_VICTORY_EVENT = 101;
}

enum ClientFeedbackTypes {
    CFT_UNKNOWN = 0;
    CFT_DOMINO_EFFECT = 1;
    CFT_AMS_ASSIGN = 2;
    CFT_APDS_ASSIGN = 3;
    CFT_HIDDEN_PBS = 4;
    CFT_TELEGUIDED_TARGET = 5;
    CFT_TAG_TARGET = 6;
}

enum SimpleTechLevelEnum {
    STL_UNKNOWN = 0;
    STL_INTRO = 1;
    STL_STANDARD = 2;
    STL_ADVANCED = 3;
    STL_EXPERIMENTAL = 4;
    STL_UNOFFICIAL = 5;
}

enum CrewTypeEnum {
    CT_UNKNOWN = 0;
    CT_SINGLE = 1;
    CT_CREW = 2;
    CT_VESSEL = 3;
    CT_TRIPOD = 4;
    CT_SUPERHEAVY_TRIPOD = 5;
    CT_QUADVEE = 6;
    CT_DUAL = 7;
    CT_COMMAND_CONSOLE = 8;
    CT_INFANTRY_CREW = 9;
}

enum GenderEnum {
    G_UNKNOWN = 0;
    G_MALE = 1;
    G_FEMALE = 2;
    G_OTHER_MALE = 3;
    G_OTHER_FEMALE = 4;
    G_RANDOMIZE = 5;
}

enum GamePhase {
    GP_UNKNOWN = 0;
    GP_LOUNGE = 1;
    GP_SELECTION = 2;
    GP_EXCHANGE = 3;
    GP_DEPLOYMENT = 4;
    GP_INITIATIVE = 5;
    GP_INITIATIVE_REPORT = 6;
    GP_TARGETING = 7;
    GP_TARGETING_REPORT = 8;
    GP_PREMOVEMENT = 9;
    GP_MOVEMENT = 10;
    GP_MOVEMENT_REPORT = 11;
    GP_OFFBOARD = 12;
    GP_OFFBOARD_REPORT = 13;
    GP_POINTBLANK_SHOT = 14;
    GP_PREFIRING = 15;
    GP_FIRING = 16;
    GP_FIRING_REPORT = 17;
    GP_PHYSICAL = 18;
    GP_PHYSICAL_REPORT = 19;
    GP_END = 20;
    GP_END_REPORT = 21;
    GP_VICTORY = 22;
    GP_DEPLOY_MINEFIELDS = 23;
    GP_STARTING_SCENARIO = 24;
    GP_SET_ARTILLERY_AUTOHIT_HEXES = 25;
}

message StringToStringMap {
    map<string, string> items = 1;
}

message Version {
    int32 release = 1;
    int32 major = 2;
    int32 minor = 3;
    bool snapshot = 4;
}

message VersionHash {
    Version version = 1;
    string hash = 2;
}

message ClientName {
    string name = 1;
    bool isBot = 2;
}

message PlayerID {
    int32 playerId = 1;
}

message InitiativeRoll {
    repeated int32 rolls = 1;
    repeated int32 originalRolls = 2;
    repeated bool wasRollReplaced = 3;
    repeated int32 bonuses = 4;
}

message Coords {
    int32 x = 1;
    int32 y = 2;
}
message Icon {
    string category = 1;
    string filename = 2;
}
message Camouflage {
    Icon icon = 1;
    int32 rotationAngle = 2;
    int32 scale = 3;
}

message Minefield {
    Coords coords = 1;
    PlayerID playerId = 2;
    int32 density = 3;
    int32 type = 4;
    int32 setting = 5;
    bool oneUse = 6;
    bool sea = 7;
    int32 depth = 8;
    bool detonated = 9;
    bool weaponDelivered = 10;
}

message Player {
    PlayerID playerId = 1;
    string name = 2;
    string email = 3;
    int32 team = 4;

    InitiativeRoll initiative = 5;

    bool done = 6;
    bool ghost = 7;
    bool bot = 8;
    bool observer = 9;
    bool gamemaster = 10;

    bool seeAll = 11;
    bool singleBlind = 12;

    int32 startingPos = 13;
    int32 startOffset = 14;
    int32 startWidth = 15;
    int32 startingAnyNWx = 16;
    int32 startingAnyNWy = 17;
    int32 startingAnySEx = 18;
    int32 startingAnySEy = 19;

    int32 numMfConv = 20;
    int32 numMfCmd = 21;
    int32 numMfVibra = 22;
    int32 numMfActive = 23;
    int32 numMfInferno = 24;

    repeated Coords artyAutoHitHexes = 25;

    int32 initialEntityCount = 26;
    int32 initialBV = 27;

    Camouflage camouflage = 28;
    string playerColor = 29;

    repeated Minefield visibleMinefields = 30;
    bool admitsDefeat = 31;
}

message CardinalEdge {
    int32 index = 1;
    string text = 2;
}

message BehaviorSettings {
    string description = 1;
    bool forcedWithdrawal = 2;
    bool goHome = 3;
    bool autoFlee = 4;
    int32 selfPreservationIndex = 5;
    int32 fallShameIndex = 6;
    int32 hyperAggressionIndex = 7;
    CardinalEdge destinationEdge = 8;
    CardinalEdge retreadEdge = 9;
    repeated string strategicBuildingTargets = 10;
    repeated string priorityUnitTargets = 11;
    int32 herdMentalityIndex = 12;
    int32 braveryIndex = 13;
    repeated int32 ignoredUnitTargets = 14;
}

message DateRange {
    int32 start = 1;
    int32 end = 2;
    bool startApproximate = 3;
    bool endApproximate = 4;
}

message CompositeTechLevel {
    bool clan = 1;
    bool mixed = 2;
    int32 introYear = 3;
    int32 techFaction = 4;
    int32 experimental = 5;
    int32 advanced = 6;
    int32 standard = 7;
    repeated DateRange extinct = 8;
    int32 techRating = 9;
    repeated int32 availability = 10;
    int32 earliest = 11;
    SimpleTechLevelEnum staticTechLevel = 12;
}

message Engine {
    bool engineValid = 1;
    int32 engineRating = 2;
    int32 engineType = 3;
    int32 engineFlags = 4;
    int32 baseChassisHeatSinks = 5;
}

message Crew {
    map<string, StringToStringMap> extraData = 1;
    CrewTypeEnum crewType = 2;
    int32 size = 3;
    int32 currentSize = 4;
    repeated string names = 5;
    repeated string nicknames = 6;
    repeated GenderEnum genders = 7;
    repeated bool clanPilots = 8;
    repeated Icon portraits = 9;
    repeated int32 gunnery = 10;
    repeated int32 piloting = 11;
    repeated int32 hits = 12;
    repeated string externalId = 13;
    repeated bool unconscious = 14;
    repeated bool dead = 15;
    repeated bool missing = 16;
    bool doomed = 17;
    bool ejected = 18;
    repeated int32 fatigue = 19;
    int32 fatigueTurnCount = 20;
    repeated int32 gunneryL = 21;
    repeated int32 gunneryM = 22;
    repeated int32 gunneryB = 23;
    repeated int32 artillery = 24;
    int32 initBonus = 25;
    int32 commandBonus = 26;
    repeated int32 toughness = 27;
    int32 pilotPos = 28;
    int32 gunnerPos = 29;
    int32 backupPilot = 30;
    int32 backupGunner = 31;
    repeated bool actedThisTurn = 32;
    bool swapConsoleRoles = 33;
    repeated bool koThisRound = 34;
}

message BaseEntity {
    InitiativeRoll initiativeRoll = 1;
    int32 id = 2;
    Camouflage camouflage = 3;
    string externalId = 4;
    double weight = 5;
    bool omni = 6;
    string chassis = 7;
    string model = 8;
    string clanChassisName = 9;
    int32 mulId = 10;
    int32 year = 11;
    int32 techLevel = 12;
    CompositeTechLevel compositeTechLevel = 13;
    int32 structuralTechRating = 14;
    int32 armorTechRating = 15;
    int32 engineTechRating = 16;
    double baseChassisFireConWeight = 17;
    int32 originalBuildYear = 18;
    Engine engine = 19;
    bool mixedTech = 20;
    bool designValid = 21;
    bool useManualBV = 22;
    int32 manualBV = 23;
    int32 initialBV = 24;
    string displayName = 25;
    string shortName = 26;
    int32 duplicateMarker = 27;
    int32 ownerId = 28;
    int32 traitorId = 29;
    int32 targetBay = 30;
    int32 startingPos = 31;
    int32 startingOffset = 32;
    int32 startingWidth = 33;
    int32 startingAnyNWx = 34;
    int32 startingAnyNWy = 35;
    int32 startingAnySEx = 36;
    int32 startingAnySEy = 37;
    Crew crew = 38;
    int32 nCrew = 39;
    int32 nPassenger = 40;
    int32 nMarines = 41;

    bool manualShutdown = 42;
    bool startupThisPhase = 43;

    bool shutdown = 44;
    bool shutdownThisPhase = 45;
    bool doomed = 46;
    bool destroyed = 47;

    Coords position = 48;
    map<int32, Coords> secondaryPositions = 49;

    int32 facing = 50;
    int32 secFacing = 51;

    GamePhase twistingPhase = 52;
    int32 walkMP = 53;
    int32 jumpMP = 54;

    bool done = 55;
    bool prone = 56;
    bool hullDown = 57;
    bool findingClub = 58;
    bool armsFlipped = 59;
    bool unjammingRAC = 60;
    bool selfDestructing = 61;
    bool selfDestructingInitiated = 62;
    bool selfDestructedThisTurn = 63;
}

message PlayerAdd {
    PlayerID playerId = 1;
    Player player = 2;
}

message PlayersTeamChange {
    repeated PlayerID playerIDs = 1;
    int32 newTeamId = 2;
}

message ServerPrincessSettings {
    map<string, BehaviorSettings> botSettings = 1;
}

message ServerPlayerReady {
    PlayerID playerId = 1;
    bool done = 2;
}

message ClientPlayerReady {
    bool done = 1;
}

message ChatMessage {
    string text = 1;
    int32 connectionId = 2;
}

message NetworkPacket {
    PacketType type = 1;
    oneof payload {
        Version version = 2;
        ClientName clientName = 3;
        VersionHash versionHash = 4;
        PlayerID playerId = 5;
        PlayerAdd playerAddOrUpdate = 6;
        PlayersTeamChange playersTeamChange = 7;
        ServerPrincessSettings serverPrincessSettings = 8;
        BehaviorSettings botSettings = 9;
        ServerPlayerReady serverPlayerReady = 10;
        ClientPlayerReady clientPlayerReady = 11;
        ChatMessage chatMessage = 12;
    }
}